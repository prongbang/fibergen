package core

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
)

type Error struct {
	Message string `json:"message"`
}

type Success struct {
	Message string `json:"message"`
}

type Response struct {
	Data    interface{} `json:"data,omitempty"`
	Message interface{} `json:"message"`
}

type Image struct {
	URL string `json:"url"`
}

func Ok(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusOK).JSON(data)
}

func SendStream(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusOK).JSON(data)
}

func Created(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusCreated).JSON(data)
}

func BadRequest(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusBadRequest).JSON(&Response{
		Message: data,
	})
}

func NotFound(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusNotFound).JSON(&Response{
		Message: data,
	})
}

func NoContent(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusNoContent).JSON(&Response{
		Message: data,
	})
}

func Unauthorized(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusUnauthorized).JSON(&Response{
		Message: data,
	})
}

func Forbidden(c *fiber.Ctx, data interface{}) error {
	return c.Status(http.StatusForbidden).JSON(&Response{
		Message: data,
	})
}
