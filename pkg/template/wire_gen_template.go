package template

type wireGenTemplate struct {
	Module  string
	Project string
}

func (w *wireGenTemplate) Text() []byte {
	return []byte(`// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"` + w.Module + `/internal/` + w.Project + `"
	"` + w.Module + `/internal/` + w.Project + `/api"
	"` + w.Module + `/internal/` + w.Project + `/database"
)

// Injectors from wire.go:

func CreateApp(dbDriver database.Drivers) ` + w.Project + `.App {
	routers := NewRouters()
	apiAPI := api.New(routers)
	app := ` + w.Project + `.NewApp(apiAPI)
	return app
}
`)
}

func WireGenTemplate(module string, project string) Template {
	return &wireGenTemplate{
		Module:  module,
		Project: project,
	}
}
