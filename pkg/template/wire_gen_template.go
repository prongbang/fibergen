package template

import (
	"github.com/prongbang/fibergen/pkg/tocase"
)

type wireGenTemplate struct {
	Module  string
	Project string
}

func (w *wireGenTemplate) Text() []byte {
	project := tocase.ToLower(w.Project)
	return []byte(`// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package ` + project + `

import (
	"` + w.Module + `/internal/app"
	"` + w.Module + `/internal/api"
	"` + w.Module + `/internal/database"
)

// Injectors from wire.go:

func CreateApp(dbDriver database.Drivers) app.App {
	routers := api.NewRouters()
	apiAPI := api.New(routers)
	apps := app.NewApp(apiAPI)
	return apps
}
`)
}

func WireGenTemplate(module string, project string) Template {
	return &wireGenTemplate{
		Module:  module,
		Project: project,
	}
}
