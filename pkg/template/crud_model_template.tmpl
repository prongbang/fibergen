package {{.PackageName}}

import (
	{{- range .Imports }}
	"{{ . }}"
	{{- end }}
	"{{ .Module }}/pkg/core"
	"github.com/uptrace/bun"
)

{{- $fields := .Fields }}
type {{.ModelName}} struct {
    bun.BaseModel `bun:"table:{{.TableName}},alias:{{- $name := .TableName }}
    {{- range $index, $word := split $name "_" }}
        {{- printf "%.1s" $word }}{{- if ne $index (sub (len (split $name "_")) 1) }}_{{- end }}
    {{- end }}" json:"-" swaggerignore:"true"`
{{- range $field := $fields }}
	{{- if $field.PrimaryKey }}
	{{ $field.Name }} {{ $field.Type }} `bun:"{{ $field.DbTag }},pk" json:"{{ $field.JsonTag }}" db:"{{ $field.DbTag }}"`
	{{- else }}
	{{ $field.Name }} {{ $field.Type }} `bun:"{{ $field.DbTag }}" json:"{{ $field.JsonTag }}" db:"{{ $field.DbTag }}"`
	{{- end }}
{{- end }}
}

// TableName sets the insert table name for this struct type
func (u *{{.ModelName}}) TableName() string {
	return "{{.TableName}}"
}

type Data{{.ModelName}} struct {
	{{.ModelName}}
}

type Paged{{.ModelName}} struct {
	*core.Paging
}

type Lite{{.ModelName}} struct {
{{- range $field := $fields }}
	{{ $field.Name }} {{ $field.Type }} `json:"{{ $field.JsonTag }}" db:"{{ $field.DbTag }}"`
{{- end }}
}

type Create{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`
{{- range $field := $fields }}
	{{ $field.Name }} {{ $field.Type }} `json:"{{ $field.JsonTag }}" db:"{{ $field.DbTag }}"`
{{- end }}
}

type CreateList{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`
	{{.ModelName}}s *[]Create{{.ModelName}}Request
}

type Update{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`
{{- range $field := $fields }}
	{{ $field.Name }} {{ $field.Type }} `json:"{{ $field.JsonTag }}" db:"{{ $field.DbTag }}"`
{{- end }}
}

type UpdateList{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`
	{{.ModelName}}s *[]Update{{.ModelName}}Request
}

type Delete{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`
	{{ .PrimaryField.Name }} {{ .PrimaryField.Type }} `json:"{{ .PrimaryField.JsonTag }}"`
}

type List{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`

	List{{.ModelName}}Criteria
}

type LiteList{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`

	LiteList{{.ModelName}}Criteria
}

type One{{.ModelName}}Request struct {
	UserRequestInfo *core.UserRequestInfo `json:"-"`

	One{{.ModelName}}Criteria
}

type List{{.ModelName}}Criteria struct {
	core.Params
}

type LiteList{{.ModelName}}Criteria struct {
	core.Sorting
}

type One{{.ModelName}}Criteria struct {
    {{ .PrimaryField.Name }} {{ .PrimaryField.Type }}
}